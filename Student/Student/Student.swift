//
//  Student.swift
//  Student
//
//  Created by Anton Safonov on 05/08/2025.
//

class Student: Codable
{
    var firstName: String = ""
    var lastName: String = ""
    var object: String = ""
    var rating: Double = 0.0
    var noneObject = "NONE"
    
//    var StudentsMass: [Student] = []
    
    enum AddErrorStudent: Error
    {
        case emptyFirstName
        case emptyLastName
        case emptyObject
        case RangeNegativeRating

        case TooBigSmallFirstName
        case TooBigSmallLastName
        case TooBigSmallObject
        
    }
    func validateFirstLastName(_ firstName: String, _ lastname: String) throws -> Bool
    {
        if firstName.isEmpty { throw AddErrorStudent.emptyFirstName}
        if lastname.isEmpty { throw AddErrorStudent.emptyLastName}
        if lastname.count < 3 || lastname.count > 10 { throw AddErrorStudent.TooBigSmallLastName}
        if firstName.count < 3 || firstName.count > 10 { throw AddErrorStudent.TooBigSmallFirstName}
        return true
    }
    func validateRating(_ rating: Double)throws -> Bool
    {
        if rating < 0 || rating > 100 { throw AddErrorStudent.RangeNegativeRating}
        return true
    }
    func validateObject(_ object: String) throws  -> Bool
    {
        if object.isEmpty { throw AddErrorStudent.emptyObject}
        if object.count < 3 || object.count > 10 { throw AddErrorStudent.TooBigSmallObject}
        return true
    }
    
    deinit{print(print("üóëÔ∏è –°—Ç—É–¥–µ–Ω—Ç \(self.firstName) \(self.lastName) —É–¥–∞–ª—ë–Ω –∏–∑ –ø–∞–º—è—Ç–∏"))}
    
    init?()
    {
        print("–î–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—å–µ–∫—Ç–∞ , —Å–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç–æ–π –æ–±—å–µ–∫—Ç, —Å –±–∞–∑–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.\n–í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?(y/n) ")
        if readLine() != "y" { print("–æ–±—å–µ–∫—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω");return nil }else{
            firstName = "noneFirstName"
            lastName = "noneLastName"
            object = "NONE"
            rating = 0.0
            print("–û–±—å–µ–∫—Ç —Å–æ–∑–¥–∞–Ω")
        }
        
    }
   
    init?(firstName: String, lastname: String)
    {
        do {
             if try validateFirstLastName(firstName, lastname)
            {
                 self.firstName = firstName
                 self.lastName = lastname
                 self.object = noneObject
                 self.rating = 0.0
                 return
             }else {print("–û—à–∏–±–∫–∞ –≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—å–µ–∫—Ç–∞!\n–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ò–º–µ–Ω–∏ –∏–ª–∏ –§–∞–º–∏–ª–∏–∏!\n"); return nil}
        }catch AddErrorStudent.emptyFirstName
        {
            print("–û—à–∏–±–∫–∞ –≤ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö, \"–ò–ú–Ø\" –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!\n–û–±—å–µ–∫—Ç –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω!\n")
            return nil
        }catch AddErrorStudent.emptyLastName
        {
            print("–û—à–∏–±–∫–∞ –≤ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö, \"–§–ê–ú–ò–õ–ò–Ø\" –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!\n–û–±—å–µ–∫—Ç –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω!\n")
            return nil
        }catch AddErrorStudent.TooBigSmallLastName
        {
            print("–û—à–∏–±–∫–∞ –≤ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö, \"–§–ê–ú–ò–õ–ò–Ø\" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 3 –¥–æ 10 —Å–∏–º–≤–æ–ª–æ–≤!\n–û–±—å–µ–∫—Ç –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω!\n")
            return nil
        }catch AddErrorStudent.TooBigSmallFirstName
        {
            print("–û—à–∏–±–∫–∞ –≤ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö, \"–ò–ú–Ø\" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 3 –¥–æ 10 —Å–∏–º–≤–æ–ª–æ–≤!\n–û–±—å–µ–∫—Ç –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω!\n")
            return nil
        } catch {
            print("–ù–µ–∏–∑–≤–µ—Å—Ç–∞–Ω—è –æ—à–∏–±–∫–∞! –ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ò–º–µ–Ω–∏ –∏–ª–∏ –§–∞–º–∏–ª–∏–∏ –æ–±—å–µ–∫—Ç–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞\n–û–±—å–µ–∫—Ç –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω!\n")
            return nil
        }
    }
    
    convenience init?(firstName: String, lastName: String, object: String)
    {
        do
        {
            self.init(firstName: firstName, lastname: lastName)
            let validationObject = try validateObject(object)
            if validationObject
            {
                self.object = object
                self.rating = 0.0
                return
            }else {print("–û—à–∏–±–∫–∞ –≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—å–µ–∫—Ç–∞!\n–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞!\n"); return nil}
                }catch AddErrorStudent.RangeNegativeRating
                {
                    print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—å–µ–∫—Ç–∞, \"–†–ï–ô–¢–ò–ù–ì\" –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0 –∏–ª–∏ –±–æ–ª—å—à–µ 100!\n–û–±—å–µ–∫—Ç –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω!\n")
                    return nil
                }catch AddErrorStudent.emptyObject
                {
                    print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—å–µ–∫—Ç–∞, \"–ü–†–ï–î–ú–ï–¢\"  –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Ç—Å—ã–º! \n–û–±—å–µ–∫—Ç –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω!\n")
                    return nil
                } catch
                {
                    print("–ù–µ–∏–∑–≤–µ—Å—Ç–∞–Ω—è –æ—à–∏–±–∫–∞! –ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–º–µ—Ç–∞ –∏–ª–∏ –æ—Ü–µ–Ω–∫–∏ –æ–±—å–µ–∫—Ç–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞\n–û–±—å–µ–∫—Ç –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω!\n")
                    return nil
                }
        
    }

}
