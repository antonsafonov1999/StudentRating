//
//  StudentManager.swift
//  Student
//
//  Created by Anton Safonov on 06/08/2025.
//

import Foundation

struct StudentManager
{
    static var students: [Student] = []
    static func addStudentWithNameAndSurname()
    {
        while true
        {
            print(#"–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å—Ç—É–¥–µ–Ω—Ç–∞:"#)
            guard let name = readLine() else { continue}
            print(#"–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é —Å—Ç—É–¥–µ–Ω—Ç–∞:"#)
            guard let surname = readLine() else { continue}
            if let student = Student(firstName: name, lastname: surname)
            {
                students.append(student)
                print("–°—Ç—É–¥–µ–Ω—Ç \(name) \(surname) –¥–æ–±–∞–≤–ª–µ–Ω!\n")
            }else{
                print("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞.\n")
            }
           
            print("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤? (y/n)\n")
            if readLine() == "n"
            {
                saveToJSON()
                break
            }else { continue }
        }
        print("\\\\\\\\\\–ú–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤\\\\\\\\\\\n")
        for i in students
        {
            print("Name: \(i.firstName) Surname: \(i.lastName)\nObject: \(i.object), Rating: \(i.rating)\n")
        }
        ManagerMenu.OpenMenu()
        
    }
    static func addStudentWithNameAndSurnameAndSubject()
    {
        
    }
    static func addStudentWithNameAndSurnameAndSubjectAndMark()
    {
        
    }
    static func addStudent() {
            print("–î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞...\n–í–ê–†–ò–ê–ù–¢–´:\n1) –°—Ç—É–¥–µ–Ω—Ç —Å –ò–º–µ–Ω–µ–º –∏ —Ñ–∞–º–∏–ª–∏–µ–π\n2) –°—Ç—É–¥–µ–Ω—Ç —Å –ò–º–µ–Ω–µ–º, —Ñ–∞–º–∏–ª–∏–µ–π, –ø—Ä–µ–¥–º–µ—Ç–æ–º\n3) –°—Ç—É–¥–µ–Ω—Ç —Å –ò–º–µ–Ω–µ–º, —Ñ–∞–º–∏–ª–∏–µ–π, –ø—Ä–µ–¥–º–µ—Ç–æ–º –∏ –æ—Ü–µ–Ω–∫–æ–π\n–í—ã–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é:\n")
        while true
            {
                if let choice = readLine(), let choiceInt = Int(choice)
            {
                switch choiceInt
                {
                case 1:
                    addStudentWithNameAndSurname()
                case 2:
                    addStudentWithNameAndSurnameAndSubject()
                case 3:
                    addStudentWithNameAndSurnameAndSubjectAndMark()
                default:
                    print("–¢–∞–∫–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –Ω–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"); continue
                }
                    break
                }else{print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –≤–≤–µ–¥–∏ —Ü–∏—Ñ—Ä—É"); }
            }
        }
        static func addSubject() {
            print("–î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç...")
            // —Ç–≤–æ–π –∫–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
        }
        static func addMark() {
            print("–î–æ–±–∞–≤–ª—è–µ–º –æ—Ü–µ–Ω–∫—É —Å—Ç—É–¥–µ–Ω—Ç—É...")
            // —Ç–≤–æ–π –∫–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏
        }
        static func showStudentInfo() {
            print("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Å—Ç—É–¥–µ–Ω—Ç—É...")
            // —Ç–≤–æ–π –∫–æ–¥ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        }
        static func showStudentAverage() {
            print("–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª —Å—Ç—É–¥–µ–Ω—Ç–∞...")
            // —Ç–≤–æ–π –∫–æ–¥ –ø–æ–¥—Å—á—ë—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞
        }
        static func showAllStudentsAverage() {
            print("–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤...")
            // —Ç–≤–æ–π –∫–æ–¥ –ø–æ–¥—Å—á—ë—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –ø–æ –≤—Å–µ–º
        }
    static func showBestStudents() {
           print("–õ—É—á—à–∏–µ —Å—Ç—É–¥–µ–Ω—Ç—ã...")
           // —Ç–≤–æ–π –∫–æ–¥ –ø–æ–∫–∞–∑–∞ –ª—É—á—à–∏—Ö
       }
       static func showWorstStudents() {
           print("–•—É–¥—à–∏–µ —Å—Ç—É–¥–µ–Ω—Ç—ã...")
           // —Ç–≤–æ–π –∫–æ–¥ –ø–æ–∫–∞–∑–∞ —Ö—É–¥—à–∏—Ö
       }
       static func saveToJSON() {
           print("–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON...")
           let encoder = JSONEncoder()
           encoder.outputFormatting = .prettyPrinted
           do
           {
               let data = try encoder.encode(students)
               let fileURL = FileManager.default.homeDirectoryForCurrentUser.appendingPathComponent("Desktop")
                   .appendingPathComponent("students.json")
               
               try data.write(to: fileURL)
               print("‚úÖ –°—Ç—É–¥–µ–Ω—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: \(fileURL.path)")
               removeMassStudent()
           }catch
           {
               print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ JSON")
           }
           
       }
    static func loadFromJSON() {
        print("–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ JSON...")
    }
    static func removeMassStudent()
    {
        students.removeAll()
        print("üßπ –ú–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –æ—á–∏—â–µ–Ω.")
    }
}
